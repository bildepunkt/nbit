// Generated by CoffeeScript 1.9.3
(function() {
  var Base, Scene,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Base = require('./base');

  Scene = (function(superClass) {
    extend(Scene, superClass);

    function Scene(options) {
      Scene.__super__.constructor.call(this);
      this._deps = options;
      this._entities = new this._deps.Collection();
    }

    Scene.prototype.addEntity = function(entity) {
      return this._entities.addItem(entity);
    };

    Scene.prototype.removeEntity = function(entity) {
      return this._entities.removeItem(entity);
    };

    Scene.prototype.getEntities = function() {
      return this._entities.get('items');
    };

    Scene.prototype.update = function() {
      return void 0;
    };

    return Scene;

  })(Base);

  module.exports = Scene;

}).call(this);
