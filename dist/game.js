// Generated by CoffeeScript 1.9.3
(function() {
  var Base, Game,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Base = require('./base');

  Game = (function(superClass) {
    extend(Game, superClass);

    function Game(options) {
      Game.__super__.constructor.call(this);
      this._deps = options;
      this._paused = false;
      this._scene = null;
      this.set('scene', this._deps.scene);
      this._start();
    }

    Game.prototype._start = function() {
      this._update = this._update.bind(this);
      return this._update();
    };

    Game.prototype._update = function() {
      var config, ctx, entities, entity, i, len;
      if (this._paused) {
        return;
      }
      config = this._deps.config;
      entities = this._deps.scene.getEntities();
      ctx = this._deps.viewport.get('context');
      ctx.clearRect(0, 0, config.get('width'), config.get('height'));
      this._scene.update();
      for (i = 0, len = entities.length; i < len; i++) {
        entity = entities[i];
        entity.render();
      }
      return requestAnimationFrame(this._update);
    };

    Game.prototype.pause = function(scene) {
      return this._paused = true;
    };

    Game.prototype.resume = function(scene) {
      return this._paused = false;
    };

    return Game;

  })(Base);

  module.exports = Game;

}).call(this);
