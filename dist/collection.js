// Generated by CoffeeScript 1.9.3
(function() {
  var Base, Collection,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Base = require('./base');

  Collection = (function(superClass) {
    extend(Collection, superClass);

    function Collection() {
      Collection.__super__.constructor.call(this);
      this._items = [];
    }

    Collection.prototype.addItem = function(item) {
      return this._items.push(item);
    };

    Collection.prototype.removeItem = function(target) {
      var i, item, j, len, ref, results;
      ref = this._items;
      results = [];
      for (i = j = 0, len = ref.length; j < len; i = ++j) {
        item = ref[i];
        if (target.get('uid' === item.get('uid'))) {
          this._items.splice(i, 1);
          break;
        } else {
          results.push(void 0);
        }
      }
      return results;
    };

    return Collection;

  })(Base);

  module.exports = Collection;

}).call(this);
