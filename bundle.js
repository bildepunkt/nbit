(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
// Generated by CoffeeScript 1.9.3
(function() {
  var Base;

  Base = (function() {
    Base.counter = 0;

    Base.getUid = function() {
      return this.counter++;
    };

    function Base() {
      this._uid = Base.getUid();
    }

    Base.prototype.set = function(key, val) {
      this['_' + key] = val;
      return this;
    };

    Base.prototype.get = function(key) {
      return this['_' + key];
    };

    return Base;

  })();

  module.exports = Base;

}).call(this);

},{}],2:[function(require,module,exports){
// Generated by CoffeeScript 1.9.3
(function() {
  var Base, Collection,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Base = require('./base');

  Collection = (function(superClass) {
    extend(Collection, superClass);

    function Collection() {
      Collection.__super__.constructor.call(this);
      this._items = [];
    }

    Collection.prototype.addItem = function(item) {
      return this._items.push(item);
    };

    Collection.prototype.removeItem = function(target) {
      var i, item, j, len, ref, results;
      ref = this._items;
      results = [];
      for (i = j = 0, len = ref.length; j < len; i = ++j) {
        item = ref[i];
        if (target.get('uid' === item.get('uid'))) {
          this._items.splice(i, 1);
          break;
        } else {
          results.push(void 0);
        }
      }
      return results;
    };

    return Collection;

  })(Base);

  module.exports = Collection;

}).call(this);

},{"./base":1}],3:[function(require,module,exports){
// Generated by CoffeeScript 1.9.3
(function() {
  var Base, Config,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Base = require('./base');

  Config = (function(superClass) {
    extend(Config, superClass);

    function Config(options) {
      var key;
      Config.__super__.constructor.call(this);
      this._scale = 8;
      this._width = 800;
      this._height = 600;
      this._canvasId = 'canvas';
      for (key in options) {
        this['_' + key] = options[key];
      }
    }

    return Config;

  })(Base);

  module.exports = Config;

}).call(this);

},{"./base":1}],4:[function(require,module,exports){
// Generated by CoffeeScript 1.9.3
(function() {
  var Base, Game,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Base = require('./base');

  Game = (function(superClass) {
    extend(Game, superClass);

    function Game(options) {
      Game.__super__.constructor.call(this);
      this._deps = options;
      this._paused = false;
      this._scene = null;
      this.set('scene', this._deps.scene);
      this._start();
    }

    Game.prototype._start = function() {
      this._update = this._update.bind(this);
      return this._update();
    };

    Game.prototype._update = function() {
      var config, ctx, entities, entity, i, len;
      if (this._paused) {
        return;
      }
      config = this._deps.config;
      entities = this._deps.scene.getEntities();
      ctx = this._deps.viewport.get('context');
      ctx.clearRect(0, 0, config.get('width'), config.get('height'));
      this._scene.update();
      for (i = 0, len = entities.length; i < len; i++) {
        entity = entities[i];
        entity.render();
      }
      return requestAnimationFrame(this._update);
    };

    Game.prototype.pause = function(scene) {
      return this._paused = true;
    };

    Game.prototype.resume = function(scene) {
      return this._paused = false;
    };

    return Game;

  })(Base);

  module.exports = Game;

}).call(this);

},{"./base":1}],5:[function(require,module,exports){
// Generated by CoffeeScript 1.9.3
(function() {
  var Point, Sprite,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Sprite = require('./sprite');

  Point = (function(superClass) {
    extend(Point, superClass);

    function Point(options) {
      Point.__super__.constructor.call(this, options);
      this._deps = options;
    }

    Point.prototype.render = function() {
      var ctx;
      Point.__super__.render.call(this);
      ctx = this._deps.viewport.get('context');
      ctx.save();
      ctx.translate(this._x, this._y);
      ctx.fillStyle = this._color;
      ctx.fillRect(0, 0, this._deps.config.get('scale'), this._deps.config.get('scale'));
      return ctx.restore();
    };

    return Point;

  })(Sprite);

  module.exports = Point;

}).call(this);

},{"./sprite":7}],6:[function(require,module,exports){
// Generated by CoffeeScript 1.9.3
(function() {
  var Base, Scene,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Base = require('./base');

  Scene = (function(superClass) {
    extend(Scene, superClass);

    function Scene(options) {
      Scene.__super__.constructor.call(this);
      this._deps = options;
      this._entities = new this._deps.Collection();
    }

    Scene.prototype.addEntity = function(entity) {
      return this._entities.addItem(entity);
    };

    Scene.prototype.removeEntity = function(entity) {
      return this._entities.removeItem(entity);
    };

    Scene.prototype.getEntities = function() {
      return this._entities.get('items');
    };

    Scene.prototype.update = function() {
      return void 0;
    };

    return Scene;

  })(Base);

  module.exports = Scene;

}).call(this);

},{"./base":1}],7:[function(require,module,exports){
// Generated by CoffeeScript 1.9.3
(function() {
  var Base, Sprite,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Base = require('./base');

  Sprite = (function(superClass) {
    extend(Sprite, superClass);

    function Sprite(options) {
      Sprite.__super__.constructor.call(this);
      this._deps = options;
      this._x = 0;
      this._y = 0;
      this._rotation = 0;
      this._color = '#000';
      this._dirty = true;
    }

    Sprite.prototype.set = function(key, val) {
      this._dirty = true;
      return Sprite.__super__.set.call(this, key, val);
    };

    Sprite.prototype.render = function() {
      if (!this._dirty) {
        return;
      }
      return this._dirty = false;
    };

    return Sprite;

  })(Base);

  module.exports = Sprite;

}).call(this);

},{"./base":1}],8:[function(require,module,exports){
// Generated by CoffeeScript 1.9.3
(function() {
  var Base, Viewport,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Base = require('./base');

  Viewport = (function(superClass) {
    extend(Viewport, superClass);

    function Viewport(options) {
      Viewport.__super__.constructor.call(this);
      this._deps = options;
      this._canvas = document.getElementById(this._deps.config.get('canvasId'));
      this._context = this._canvas.getContext('2d');
      this._canvas.width = this._deps.config.get('width');
      this._canvas.height = this._deps.config.get('height');
    }

    return Viewport;

  })(Base);

  module.exports = Viewport;

}).call(this);

},{"./base":1}],9:[function(require,module,exports){
var Config = require('./dist/config');
var Collection = require('./dist/collection');
var Viewport = require('./dist/viewport');
var Point = require('./dist/point');
var Scene = require('./dist/scene');
var Game = require('./dist/game');

var myConfig = new Config();
var myViewport = new Viewport({
    config: myConfig
});

var myPoint = new Point({
    config: myConfig,
    viewport: myViewport
});
console.log(myPoint.get('uid'));

var myScene = new Scene({
    Collection: Collection
});
myScene.addEntity(myPoint);

var game = new Game({
    config: myConfig,
    scene: myScene,
    viewport: myViewport,
});

myScene.update = function() {
    var x = myPoint.get('x');
    myPoint.set('x', x + 8);
};

},{"./dist/collection":2,"./dist/config":3,"./dist/game":4,"./dist/point":5,"./dist/scene":6,"./dist/viewport":8}]},{},[9]);
